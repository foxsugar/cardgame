buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
		mavenCentral()
	}
	configurations { springLoaded }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//		classpath 'org.springframework:springloaded:1.2.7.RELEASE'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'



sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
//	mavenCentral()
	maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
}


dependencies {
	compile project(path: ':gamedb')
	compile project(path: ':rpc')
	compile('org.springframework.boot:spring-boot-starter-aop')
//	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-logging')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-remote-shell')
//	compile('org.springframework.boot:spring-boot-loader')

	compile group: 'org.springframework', name: 'springloaded', version: '1.2.7.RELEASE'


	compile group: 'io.netty', name: 'netty-all', version: '4.1.8.Final'

	//protobuf-json-format
	compile 'com.googlecode.protobuf-java-format:protobuf-java-format:1.2'

	//mysql driver
	compile 'mysql:mysql-connector-java:5.1.36'

	//jackson
	compile 'com.fasterxml.jackson.core:jackson-core:2.8.7'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.7'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.8.7'

//    compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.4'
	compile "net.sf.json-lib:json-lib:2.4:jdk15"

	compile 'com.google.code.gson:gson:2.6.2'

	compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '1.2.0.RELEASE'

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

idea {
	module {
		inheritOutputDirs = false
		outputDir = file("$buildDir/classes/main/")
	}
}

jar {
	baseName = 'cardgame'
	version =  ''
	manifest {
		attributes 'Implementation-Title': 'cardgame',
				'Implementation-Version': version,
				'Start-Class': 'com.code.server.cardgame.CardgameApplication',
				'Main-Class': 'org.springframework.boot.loader.JarLauncher'
	}
	//是否启用spring boot打包
//	enabled = false
}




springBoot {
	backupSource = false
	layout='DIR'
}

gradle.taskGraph.whenReady { graph ->
	graph.allTasks.findAll { it.name ==~ /compileThrift.*/ }*.enabled = false
}
//启动服务
bootRun {

//	def springLoadedFile = configurations.springLoaded.find
//			{ it.name == "springloaded-1.2.7.RELEASE.jar" }
//
//	systemProperty 'server.port', '8084'
//	systemProperty 'spring.profiles.active', 'mysql'
//	jvmArgs "-javaagent:$springLoadedFile", "-noverify"
//	main = 'com.code.server.cardgame.CardgameApplication'
}

// project runtimes JVM options
applicationDefaultJvmArgs = ["-server",
//							 "-Dproject.home=${projectpath}",
//							 "-Dlog4j.configurationFile=${projectpath}/conf/log4j2.xml",
							 "-Xms3g",
							 "-Xmx3g",
							 //略
]


//task hello {
//	doLast {
//		exec {
//			workingDir 'build/libs/'
//			commandLine 'cmd','c','cd build/libs','jar -xf cardgame.jar'
//		}
//		exec {
//			workingDir 'E:\\workspace\\game\\cardgame\\build\\libs'
//			commandLine 'jar -xf E:\\workspace\\game\\cardgame\\build\\libs\\cardgame.jar'
//		}
//	}
//}